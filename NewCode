import urllib2  # I decided to not use the downloading one since I had to use Python 3 and it was given me sooo much issues
#I will accept the point deduction for not downloading the file to a local path and running on python2 insted of python3

count =0
data = urllib2.urlopen('https://s3.amazonaws.com/tcmg476/http_access_log') # it's a file like object and works just like a file
datecount = {} #Dictionary to store the count for every date
monthcount = {} #Dictionary to store the count for every month
reqcount = {} #Dictionary to store the count of every requested file
errorcount=0
newcount=0
for line in data: 
    #Example of one line
    #'local - - [25/Oct/1994:10:08:07 -0600] "GET index.html HTTP/1.0" 200 3185\n'
    
	#CODE FOR #2
    count+=1
    left=line.find('[')
    right=line.find(':')
    date=line[left+1:right]
    if not date[0].isdigit(): #Something wrong with this line
        continue #skip
    if not date in datecount.keys():
        datecount[date]=1 #Set initial value
    else:
        datecount[date]+=1 #Increment value

    datewords=date.split('/')
    try:
        month=datewords[1]
        if not month in monthcount.keys():
            monthcount[month]=1 #Set initial value
        else:
            monthcount[month]+=1 #Increment value
    except:
        continue
		
	 #CODE FOR #3 AND #4
    words=line.split()
    try:
        code=int(words[-2])
        if code>=400 and code<500:
            errorcount+=1
        if code>=300 and code<400:
            newcount+=1
    except:
        continue
		
#CODE FOR #5 AND #6-----> commented out because I was not able to get it to fully work, wish i used regex!
	#lefty=line.find('GET')
	#if lefty==-1:
		#lefty=line.find('PUT')
	#left_pos = lefty + 4
	#if lefty==-1:
		#lefty=line.find('POST')
		#left_pos = lefty + 5
	#if lefty==-1:
		#continue
	#righty=line.find('HTTP')
	#req=line[left_pos:righty]
	
	#if not req in reqcount.keys():
		#reqcount[req]=1
	#else:
		#reqcount[req]+=1
 
#ANSWERING #2
for date in datecount.keys():
    print('total for {} = {}'.format(date,datecount[date]))
for month in monthcount.keys():
    print('total for {} = {}'.format(month,monthcount[month]))
	
#couldnt open as CSV file :(
#sample code from stackoverflow
#import StringIO
#s = StringIO.StringIO(text)
#with open('fileName.csv', 'w') as f:
    #for line in s:
        #f.write(line)

#ANSWERING #1  
print ' ' #to add a new line
print('total requests = {}'.format(count)) #for taking the amount of lines in logfile
print ' '		
		
#ANSWERING #3 AND #4
per1count = (count/errorcount) #getting percentages
per2count = (count/newcount)

print 'Amount of Sucessful Requests: ', errorcount
print 'Percentage of Sucessful Requests: ', per1count, '%'
print ' '
print 'Amount of Unsucessful Requests: ', newcount
print 'Percentage of Unsucessful Requests: ', per2count, '%'
